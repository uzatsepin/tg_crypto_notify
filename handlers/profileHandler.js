import {Composer, InlineKeyboard} from "grammy";
import {supabase} from "../supabase/index.js";
import percentNotify from "../helpers/percentNotify.js";
import {mainKeyboard} from "../keyboards/index.js";

export const profileHandler = new Composer();

profileHandler.callbackQuery('profile', async (ctx) => {

	const userPercent = await percentNotify(ctx.from.id)


	const keyboard = new InlineKeyboard().
		text('üí≤ –í–∞–ª—é—Ç–∞', 'currency').
		text(`üî¢ % –æ–ø–æ–≤–µ—â–µ–Ω–∏—è (${userPercent}%)`, 'percent').row().
		text('üè† –î–æ–º–æ–π', 'home')

	await ctx.reply(`${ctx.from.first_name}, —Ç—ã –∑–∞—à–µ–ª –≤ —Ä–µ–∂–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–∫. \n\n‚öôÔ∏è –í—ã–±–µ—Ä–∏ —á—Ç–æ —Ç—ã —Ö–æ—Ç–µ–ª –±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å`, {
		reply_markup: keyboard,
		parse_mode: "HTML"
	});
})


export async function getPercentFromUser(conversation, ctx) {

	const tgId = await ctx.update.callback_query.from.id;
	const percentFromDb = await percentNotify(ctx.from.id)

	await ctx.reply(`–£–∫–∞–∂–∏ –ø—Ä–∏ –∫–∞–∫–æ–º % (–ø—Ä–æ—Ü–µ–Ω—Ç–µ) –∏–∑–º–µ–Ω–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã —Ç–µ–±–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ?\n\n–°–µ–π—á–∞—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äì ${percentFromDb}`)
	const newPercent = await conversation.form.number();

	try {
		await supabase.from("tg_users").update({percent_notify: newPercent}).eq("tg_id", tgId)
		await ctx.reply(`–£—Å–ø–µ—à–Ω–æ —É–∫–∞–∑–∞–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ % –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ü–µ–Ω—ã. \n\n–¢–µ–ø–µ—Ä—å, –µ—Å–ª–∏ —Ü–µ–Ω–∞ –º–æ–Ω–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—Å—è –±–æ–ª–µ–µ —á–µ–º –Ω–∞ <b>${newPercent}%</b>, –≤–∞–º –ø—Ä–∏–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.`, {
			reply_markup: mainKeyboard,
			parse_mode: 'HTML'
		})

	} catch (e) {
		console.error(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ % –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.`)
	}
}


profileHandler.callbackQuery('percent', async (ctx) => {
	await ctx.conversation.enter("getPercentFromUser")
})


